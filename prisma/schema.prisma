generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String         @id @default(uuid())
  username              String         @unique
  password              String
  role                  Role           @default(DELIVERY_MAN)
  establishmentId       String?
  establishment         Establishment? @relation(fields: [establishmentId], references: [id])
  receivedNotifications Notification[] @relation("ReceivedNotifications")
  sentNotifications     Notification[] @relation("SentNotifications")
}

enum Role {
  DELIVERY_MAN
  ESTABLISHMENT
}

model Notification {
  id         String   @id @default(uuid())
  content    String
  timestamp  DateTime @default(now())
  status     String
  senderId   String
  receiverId String
  receiver   User     @relation("ReceivedNotifications", fields: [receiverId], references: [id])
  sender     User     @relation("SentNotifications", fields: [senderId], references: [id])
}

model Establishment {
  id       String  @id @default(uuid())
  name     String
  location String
  users    User[]
  orders   Order[]
}

model Order {
  id              String          @id @default(uuid())
  customerName    String
  deliveryAddress String
  items           ItemsOnOrders[]
  status          String
  timestamp       DateTime        @default(now())
  establishmentId String
  establishment   Establishment   @relation(fields: [establishmentId], references: [id])
}

model Item {
  id       String          @id @default(uuid())
  name     String
  quantity Int
  orderId  String
  orders   ItemsOnOrders[]
}

model ItemsOnOrders {
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    String
  item       Item     @relation(fields: [itemId], references: [id])
  itemId     String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([orderId, itemId])
}
