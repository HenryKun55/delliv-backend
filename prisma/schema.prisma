generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(uuid())
  username        String         @unique
  password        String
  role            Role           @default(DELIVERY_MAN)
  establishmentId String?
  establishment   Establishment? @relation(fields: [establishmentId], references: [id])
  notifications   Notification[]
  orders          Order[]
}

enum Role {
  DELIVERY_MAN
  ESTABLISHMENT
}

model Notification {
  id              String             @id @default(uuid())
  timestamp       DateTime           @default(now())
  status          NotificationStatus @default(IT_ARRIVED)
  userId          String
  user            User               @relation(fields: [userId], references: [id])
  establishmentId String
  establishment   Establishment      @relation(fields: [establishmentId], references: [id])
}

enum NotificationStatus {
  IT_ARRIVED
  CONFIRMED
}

model Establishment {
  id            String         @id @default(uuid())
  name          String
  location      String
  users         User[]
  orders        Order[]
  notifications Notification[]
}

model Order {
  id              String          @id @default(uuid())
  customerName    String
  items           ItemsOnOrders[]
  status          OrderStatus     @default(NOTIFIED)
  timestamp       DateTime        @default(now())
  userId          String
  user            User            @relation(fields: [userId], references: [id])
  establishmentId String
  establishment   Establishment   @relation(fields: [establishmentId], references: [id])
}

enum OrderStatus {
  NOTIFIED
  CONFIRMED
}

model Item {
  id       String          @id @default(uuid())
  name     String
  quantity Int
  orderId  String
  orders   ItemsOnOrders[]
}

model ItemsOnOrders {
  order   Order  @relation(fields: [orderId], references: [id])
  orderId String
  item    Item   @relation(fields: [itemId], references: [id])
  itemId  String

  @@id([orderId, itemId])
}
